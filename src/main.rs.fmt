
extern crate rusty_bike;
use rusty_bike::network::Network;


fn main() {
    println!("Hello World!");

    let mut net = Network::with_shape(&[3, 16, 16, 2]);
    net.initialize_random();

    let result = net.feed_forward(&[1.0, 2.0, 3.0]);
    println!("Result: {:?}", result);

    { // Training
        let input = &[vec![1.0, 2.0, 3.0], vec![3.0, 2.0, 1.0], vec![1.0, 9.0, 120.0], vec![0.7, 0.3, 0.1]];
        let target = &[vec![1.0, 0.0], vec![0.0, 1.0], vec![1.0, 0.0], vec![0.0, 1.0]];

        for _ in 0..100_000 {
            net.train(input, target);
        }
    }
    
    let result = ;
    println!("Increasing: {:?}", net.feed_forward(&[1.0, 2.0, 3.0]));

    println!("Decreasing: {:?}", net.feed_forward(&[3.0, 2.0, 1.0]));
}

